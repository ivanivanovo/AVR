\ первая программа на форт-ассемблере AVR
\ маленькая, но с большими коментариями

\ ===================================================================================
\ для начала скажем spf чем ему придется работать
S" ~iva/AVR/asmAVR.f" INCLUDED \ ассемблер, дизассемблер и другое
\ этот файл в свою очередь подгрузит остальные файлы
\ 
\ теперь объясним с каким микроконтроллером будем иметь дело
\ в качестве ID используется сигнатура чипа
\ это удобно, так как программатор сможет проверить ее
 0x9207 CONSTANT device \ Процессор ATtiny44
\ а теперь загрузим данные по выбранноу чипу
S" ~iva/AVR/selectAVR.f" INCLUDED \ набор команд для данного микроконтроллера
DECIMAL \ просто чтобы быть уверенными, что работаем в десятичной системе счисления
\ итого 4 строки и spf стал экспертом по программированию AVR на ассемблере

\ ===================================================================================
\ далее уже сам проект
\ задача: зажечь светодиодик подключенный к одной из ножек МК

\ ===================================================================================
\ начнем с того, что объясним к какой именно ножке подключен светодиодик
BitsIn PortA \ он подключен к порту А
    4 #BitIs Red \ к 4 выводу, т.е. к PA4

\ начнем "работу"
code Bip \ обзовем главное слово как Bip
    begin \ начало бесконечного цикла
        _/ Red \ включить светодиодик
           nop  \ ничего не делать 1 такт 
               \_ Red \ погасить СД
    again \ завернуть цикл на начало
    c;
\ работа есть, но действий не будет видно, так как нужный вывод
\ не переведен для работы на выход, то есть чип не инициализирован
\ исправим это упущение
code ini
    ldi r,{b Red }  mov ddrA,r \ теперь светодиодик подключен к ВЫХОДУ
    rjmp Bip \ и можно переходить к основному циклу
    c;
0 VECTOR> ini \ тут мы объясняем, что после старта нужно 
\ сразу переходить к инициализации
\ все!
\ теперь можем посмотреть, что накомпилировали
 listing \ выдаст весь листинг
\ Bip val? \ только код этого слова
\ Bip val_ val? \ этого и следующего за ним

\ теперь загрузим программу в микроконтроллер
HEX-SAVE helloLed.hex \ выложим скомпилированную прошивку
\ для стороннего программатора или для истории
\ либо, если есть программатор USBtiny или AVRISP_mk2
\ сразу прошьем чип командой
chip! \ по этой команде будет произведена запись flash, EEPROM, Fuses и Lock, но...
\ если подключен программатор, 
\ к программатору подключен МК,
\ его сигнатура соответствует device
\ flash, EEPROM, Fuses и Lock были изменены, относительно тех данных, что уже
\ прописаны в чипе.
\ В остальных случаях слово chip! ничего не делает, даже не ругается.
\ Если все пройдет удачно, то светодиодик засветится, а осциллограф
\ покажет, что он еще и моргает.